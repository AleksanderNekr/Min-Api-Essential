<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">

        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="DefaultError" xml:space="preserve">
        <value>An unknown failure has occurred</value>
    </data>
    <data name="DuplicateEmail" xml:space="preserve">
        <value>Email '{0}' is already taken</value>
    </data>
    <data name="DuplicateRoleName" xml:space="preserve">
        <value>Role name '{0}' is already taken</value>
    </data>
    <data name="DuplicateUserName" xml:space="preserve">
        <value>Username '{0}' is already taken</value>
    </data>
    <data name="InvalidEmail" xml:space="preserve">
        <value>Email '{0}' is invalid</value>
    </data>
    <data name="InvalidManagerType" xml:space="preserve">
        <value>Type {0} must derive from {1}&amp;lt;{2}&amp;gt;</value>
    </data>
    <data name="InvalidPasswordHasherCompatibilityMode" xml:space="preserve">
        <value>The provided PasswordHasherCompatibilityMode is invalid</value>
    </data>
    <data name="InvalidPasswordHasherIterationCount" xml:space="preserve">
        <value>The iteration count must be a positive integer</value>
    </data>
    <data name="InvalidRoleName" xml:space="preserve">
        <value>Role name '{0}' is invalid</value>
    </data>
    <data name="InvalidToken" xml:space="preserve">
        <value>Invalid token</value>
    </data>
    <data name="InvalidUserName" xml:space="preserve">
        <value>Username '{0}' is invalid, can only contain letters or digits</value>
    </data>
    <data name="LoginAlreadyAssociated" xml:space="preserve">
        <value>A user with this login already exists</value>
    </data>
    <data name="MustCallAddIdentity" xml:space="preserve">
        <value>AddIdentity must be called on the service collection</value>
    </data>
    <data name="NoTokenProvider" xml:space="preserve">
        <value>No IUserTwoFactorTokenProvider&amp;lt;{0}&amp;gt; named '{1}' is registered</value>
    </data>
    <data name="NullSecurityStamp" xml:space="preserve">
        <value>User security stamp cannot be null</value>
    </data>
    <data name="PasswordMismatch" xml:space="preserve">
        <value>Incorrect password</value>
    </data>
    <data name="Passwords must have at least one digit ('0'-'9')" xml:space="preserve">
        <value>Passwords must have at least one digit ('0'-'9')</value>
    </data>
    <data name="PasswordRequiresLower" xml:space="preserve">
        <value>Passwords must have at least one lowercase ('a'-'z')</value>
    </data>
    <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
        <value>Passwords must have at least one non alphanumeric character</value>
    </data>
    <data name="PasswordRequiresUpper" xml:space="preserve">
        <value>Passwords must have at least one uppercase ('A'-'Z')</value>
    </data>
    <data name="PasswordTooShort" xml:space="preserve">
        <value>Passwords must be at least {0} characters</value>
    </data>
    <data name="RoleNotFound" xml:space="preserve">
        <value>Role {0} does not exist</value>
    </data>
    <data name="StoreNotIQueryableRoleStore" xml:space="preserve">
        <value>Store does not implement IQueryableRoleStore&amp;lt;TRole&amp;gt;</value>
    </data>
    <data name="StoreNotIRoleClaimStore" xml:space="preserve">
        <value>Store does not implement IRoleClaimStore&amp;lt;TRole&amp;gt;</value>
    </data>
    <data name="StoreNotIUserAuthenticationTokenStore" xml:space="preserve">
    <value>Store does not implement IUserAuthenticationTokenStore&lt;User&gt;</value>
</data>
    <data name="StoreNotIUserClaimStore" xml:space="preserve">
    <value>Store does not implement IUserClaimStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserConfirmationStore" xml:space="preserve">
    <value>Store does not implement IUserConfirmationStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserEmailStore" xml:space="preserve">
    <value>Store does not implement IUserEmailStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserLockoutStore" xml:space="preserve">
    <value>Store does not implement IUserLockoutStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserLoginStore" xml:space="preserve">
    <value>Store does not implement IUserLoginStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserPasswordStore" xml:space="preserve">
    <value>Store does not implement IUserPasswordStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserPhoneNumberStore" xml:space="preserve">
    <value>Store does not implement IUserPhoneNumberStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserRoleStore" xml:space="preserve">
    <value>Store does not implement IUserRoleStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserSecurityStampStore" xml:space="preserve">
    <value>Store does not implement IUserSecurityStampStore&lt;TUser&gt;</value>
</data>
    <data name="StoreNotIUserAuthenticatorKeyStore" xml:space="preserve">
    <value>Store does not implement IUserAuthenticatorKeyStore&lt;User&gt;</value>
</data>
    <data name="StoreNotIUserTwoFactorStore" xml:space="preserve">
    <value>Store does not implement IUserTwoFactorStore&lt;TUser&gt;</value>
</data>
    <data name="RecoveryCodeRedemptionFailed" xml:space="preserve">
    <value>Recovery code redemption failed</value>
</data>
    <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>User already has a password set</value>
</data>
    <data name="UserAlreadyInRole" xml:space="preserve">
    <value>User already in role '{0}'</value>
</data>
    <data name="UserLockedOut" xml:space="preserve">
    <value>User is locked out</value>
</data>
    <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>Lockout is not enabled for this user</value>
</data>
    <data name="UserNameNotFound" xml:space="preserve">
    <value>User {0} does not exist</value>
</data>
    <data name="UserNotInRole" xml:space="preserve">
    <value>User is not in role '{0}'</value>
</data>
    <data name="StoreNotIUserTwoFactorRecoveryCodeStore" xml:space="preserve">
    <value>Store does not implement IUserTwoFactorRecoveryCodeStore&lt;User&gt;</value>
</data>
    <data name="PasswordRequiresUniqueChars" xml:space="preserve">
    <value>Passwords must use at least {0} different characters</value>
</data>
    <data name="NoRoleType" xml:space="preserve">
    <value>No RoleType was specified, try AddRoles&lt;TRole&gt;()</value>
</data>
    <data name="StoreNotIProtectedUserStore" xml:space="preserve">
    <value>Store does not implement IProtectedUserStore&lt;TUser&gt; which is required when ProtectPersonalData = true</value>
</data>
    <data name="NoPersonalDataProtector" xml:space="preserve">
    <value>No IPersonalDataProtector service was registered, this is required when ProtectPersonalData = true</value>
</data>
    <data name="PasswordRequiresDigit" xml:space="preserve">
        <value>Passwords must have at least one digit ('0'-'9')</value>
    </data>
    <data name="ConcurrencyFailure" xml:space="preserve">
        <value>Optimistic concurrency failure, object has been modified</value>
    </data>
    <data name="ValidationErrorTitle" xml:space="preserve">
        <value>Validation errors occured</value>
    </data>
</root>